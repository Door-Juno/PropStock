# ----------------------------------------
# 1. 운영체제 및 IDE 관련 파일 (OS & IDE specific files)
# ----------------------------------------
.DS_Store                
Thumbs.db                
.vscode/                
.idea/                  
*.sublime-workspace      
*.swp                    

# ----------------------------------------
# 2. 공통 Python 및 Django 관련 파일 (Common Python & Django files)
# ----------------------------------------
# 파이썬 바이트코드 파일
*.pyc
__pycache__/

# 가상 환경 폴더
venv/
env/
.venv/

# SQLite 데이터베이스 파일 (settings.py에서 다르게 설정했다면 해당 이름으로 변경)
# PostgreSQL을 Docker로 사용하므로 보통 로컬 SQLite DB는 사용하지 않지만,
# 만약을 위해 포함합니다.
db.sqlite3

# Django가 정적 파일을 수집하는 폴더 (collectstatic 명령어 사용 시)
# 배포 시 Nginx 등으로 별도 서빙하며, 버전 관리할 필요 없음
staticfiles/
static_cdn/ 
media/      

# 로컬 개발 환경 설정 파일 (민감 정보 포함 가능성)
# settings.py가 여러 파일로 분리될 때 사용될 수 있습니다.
local_settings.py

# 파이썬 로그 파일
*.log
*.sqlite3-journal 

# ----------------------------------------
# 3. Node.js (React) 관련 파일 (Node.js/React files)
# ----------------------------------------
node_modules/            
build/                   
.env                     
.env.local
.env.development.local
.env.test.local
.env.production.local
npm-debug.log* 
yarn-debug.log* 
yarn-error.log* 

# ----------------------------------------
# 4. Docker 관련 파일 (Docker files)
# ----------------------------------------
# Docker Compose에서 볼륨으로 마운트하는 데이터 폴더
# PostgreSQL 데이터베이스의 실제 데이터가 저장되는 곳입니다.
# docker-compose.yml 파일에 정의된 volumes 이름과 일치시켜야 합니다.
# 예시: pgdata: 일 경우
pgdata/                 
mysql_data/              


ai/data/sales_data_store_*.csv
ai/mlruns/

GEMINI.md

.dockerignore

propstock*.pem