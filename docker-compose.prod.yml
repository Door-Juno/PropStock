

services:
  # Nginx 리버스 프록시 (프로덕션의 유일한 진입점)
  nginx:
    image: nginx:1.21-alpine
    ports:
      - "80:80" # 외부 80 포트를 Nginx 80 포트로 연결
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf # 직접 작성한 설정 파일 마운트
      - static_volume:/staticfiles/ # 백엔드의 정적 파일을 담을 볼륨 마운트
    depends_on:
      - backend
      - frontend

  # Frontend 서비스 (프로덕션 빌드)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile # 프로덕션용으로 수정한 Dockerfile 사용
    # command, ports, volumes는 Nginx가 처리하므로 제거

  # Backend 서비스 (Gunicorn 사용)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile # 프로덕션용으로 수정한 Dockerfile 사용
    volumes:
      - static_volume:/app/staticfiles/ # Nginx와 공유할 정적 파일 볼륨
      - ai_data_volume:/app/ai/data   # AI 데이터 공유 볼륨
    expose:
      - "8000" # Docker 네트워크 내부에서만 8000 포트 노출
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - DEBUG=True # 임시로 디버그 모드 활성화
    depends_on:
      db:
        condition: service_healthy
      ai_service:
        condition: service_started

  # AI 서비스
  ai_service:
    build:
      context: ./ai
      dockerfile: Dockerfile
    command: uvicorn main:app --host 0.0.0.0 --port 8001 --workers 1
    volumes:
      - ai_data_volume:/app/ai/data
    expose:
      - "8001" # Docker 네트워크 내부에서만 8001 포트 노출
    environment:
      - MODEL_PATH=${MODEL_PATH}
    depends_on:
      - db

  # Database 서비스
  db:
    image: postgres:13
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
  static_volume:
  ai_data_volume:
